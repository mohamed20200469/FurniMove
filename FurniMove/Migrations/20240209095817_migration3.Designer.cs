// <auto-generated />
using System;
using FurniMove.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FurniMove.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240209095817_migration3")]
    partial class migration3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FurniMove.Models.Appliance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("height")
                        .HasColumnType("float");

                    b.Property<double>("length")
                        .HasColumnType("float");

                    b.Property<int?>("moveRequestId")
                        .HasColumnType("int");

                    b.Property<double>("width")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("moveRequestId");

                    b.ToTable("Appliances");
                });

            modelBuilder.Entity("FurniMove.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("latitude")
                        .HasColumnType("float");

                    b.Property<double>("longitude")
                        .HasColumnType("float");

                    b.Property<DateTime>("timeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("FurniMove.Models.MoveOffer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("moveRequestId")
                        .HasColumnType("int");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("moveRequestId");

                    b.ToTable("MoveOffers");
                });

            modelBuilder.Entity("FurniMove.Models.MoveRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("cost")
                        .HasColumnType("float");

                    b.Property<int?>("endLocationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("endTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("numOfAppliances")
                        .HasColumnType("int");

                    b.Property<int?>("rating")
                        .HasColumnType("int");

                    b.Property<int?>("startLocationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("startTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("truckId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("endLocationId");

                    b.HasIndex("startLocationId");

                    b.HasIndex("truckId");

                    b.ToTable("MoveRequests");
                });

            modelBuilder.Entity("FurniMove.Models.Truck", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("capacity")
                        .HasColumnType("int");

                    b.Property<double>("consumptionRate")
                        .HasColumnType("float");

                    b.Property<int?>("currentLocationId")
                        .HasColumnType("int");

                    b.Property<string>("model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("plateNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("currentLocationId");

                    b.ToTable("Trucks");
                });

            modelBuilder.Entity("FurniMove.Models.Appliance", b =>
                {
                    b.HasOne("FurniMove.Models.MoveRequest", "moveRequest")
                        .WithMany("appliances")
                        .HasForeignKey("moveRequestId");

                    b.Navigation("moveRequest");
                });

            modelBuilder.Entity("FurniMove.Models.MoveOffer", b =>
                {
                    b.HasOne("FurniMove.Models.MoveRequest", "moveRequest")
                        .WithMany()
                        .HasForeignKey("moveRequestId");

                    b.Navigation("moveRequest");
                });

            modelBuilder.Entity("FurniMove.Models.MoveRequest", b =>
                {
                    b.HasOne("FurniMove.Models.Location", "endLocation")
                        .WithMany()
                        .HasForeignKey("endLocationId");

                    b.HasOne("FurniMove.Models.Location", "startLocation")
                        .WithMany()
                        .HasForeignKey("startLocationId");

                    b.HasOne("FurniMove.Models.Truck", "truck")
                        .WithMany()
                        .HasForeignKey("truckId");

                    b.Navigation("endLocation");

                    b.Navigation("startLocation");

                    b.Navigation("truck");
                });

            modelBuilder.Entity("FurniMove.Models.Truck", b =>
                {
                    b.HasOne("FurniMove.Models.Location", "currentLocation")
                        .WithMany()
                        .HasForeignKey("currentLocationId");

                    b.Navigation("currentLocation");
                });

            modelBuilder.Entity("FurniMove.Models.MoveRequest", b =>
                {
                    b.Navigation("appliances");
                });
#pragma warning restore 612, 618
        }
    }
}
